@page "/tarefasexcluidas"
@inject IDialogService DialogService
@inject TarefasService TarefasService

@using inicio.Models

<PageTitle>Lixeira</PageTitle>


<MudButton @onclick="OpenDialogAsync" Variant="Variant.Filled" Color="Color.Primary" style="margin:20px; margin-top:20px;">
    Como funciona essa página
</MudButton>

<MudContainer>
    <MudGrid>
        @if(TarefasService.Tarefas.Any(tarefa => tarefa.Excluida))
        {
            @foreach(Tarefa tarefa in TarefasService.Tarefas.Where(tarefa => tarefa.Excluida))
            { 
                <MudItem xs="12" sm="6" md="4" >
                    <MudCard Elevation="tarefa.ElevationLevel" Style="background-color: #ffdcdc;" @onmouseover="() => tarefa.ElevationChange(5)" @onmouseout="() => tarefa.ElevationChange(2)">
                        <MudCardContent >
                            <MudText Typo="Typo.h6" Style="margin-bottom: 10px">@tarefa.Titulo</MudText>
                            <MudText Typo="Typo.body2" Style="margin-bottom: 15px; ">@tarefa.Descricao</MudText>
                            <MudText Typo="Typo.body2" Style="margin-bottom: 10px; ">Criada por @tarefa.NomeUsuarioCriador</MudText>
                            <MudText Typo="Typo.body2">A ser concluida até @tarefa.DataFinal.ToString("dd/MM/yyyy")</MudText>
                        </MudCardContent>
                        <MudCardActions class="justify-end">
                            <MudButton OnClick="() => tarefa.Restaurar()" Color="Color.Warning" class="mr-1" >Restaurar</MudButton>
                            <MudButton OnClick="() => TarefasService.RemoveTarefa(tarefa.Id)" Color="Color.Warning" class="mr-1" >Deletar permanentemente</MudButton>
                        </MudCardActions>
                    </MudCard>
                </MudItem>
            }
        }
        else 
        {
            <MudText class="m-5" xs="12">
                Não há tarefas por aqui
            </MudText>
        }
    </MudGrid>
</MudContainer>

@code 
{
    /*private List<Tarefa> Tarefas = new List<Tarefa>
    {
        new Tarefa {Id = 1,NomeUsuarioCriador ="João Sucupira" , Titulo =  "Estudar .NET", Descricao = "Aprender o básico de Blazor", DataFinal = DateTime.Parse("2024-12-02 12:00"),  Concluida = false, Excluida = true},
        new Tarefa {Id = 2,NomeUsuarioCriador ="João Sucupira" , Titulo =  "Fazer exercício de C#",  Descricao = "Implementar um CRUD", DataFinal = DateTime.Parse("2024-12-02 12:00"),  Concluida = false, Excluida = true},
        new Tarefa {Id = 3,NomeUsuarioCriador ="João Sucupira" , Titulo =  "Criar um app web", Descricao = "Testar uma aplicação Blazor", DataFinal = DateTime.Parse("2024-12-02 12:00"),  Concluida = true, Excluida = false},
        new Tarefa {Id = 4,NomeUsuarioCriador ="João Sucupira" , Titulo =  "Aprender estilização", Descricao = "Usar Style, Typo e colocar umas cores nada a ver em qualquer canto no Blazor", DataFinal = DateTime.Parse("2024-12-02 12:00"),  Concluida = true, Excluida = false},
    };*/

    private Task OpenDialogAsync()
    {
        var options = new DialogOptions { CloseOnEscapeKey = true };

        return DialogService.ShowAsync<DialogUsageExample_Dialog>("Simple Dialog", options);
    }
}